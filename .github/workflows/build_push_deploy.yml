name: Build and push

on:
  push:
    branches: [ main, staging ]

env:
  REGISTRY: ghcr.io
  FASTAPI_IMAGE_NAME: sunba23/sunbadev-api
  NGINX_IMAGE_NAME: sunba23/sunbadev-nginx

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata for Docker
        id: meta
        run: |
          if [ ${{ github.ref }} = 'refs/heads/main' ]; then
            echo "tag=prod" >> $GITHUB_OUTPUT
            echo "env=prod" >> $GITHUB_OUTPUT
          else
            echo "tag=staging" >> $GITHUB_OUTPUT
            echo "env=staging" >> $GITHUB_OUTPUT
          fi

      - name: Build and push FastAPI image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./app/Dockerfile
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.FASTAPI_IMAGE_NAME }}:${{ steps.meta.outputs.tag }}
            ${{ env.REGISTRY }}/${{ env.FASTAPI_IMAGE_NAME }}:latest

      - name: Build and push Nginx image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./nginx/Dockerfile
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.NGINX_IMAGE_NAME }}:${{ steps.meta.outputs.tag }}
            ${{ env.REGISTRY }}/${{ env.NGINX_IMAGE_NAME }}:latest

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set environment
        id: env
        run: |
          if [ ${{ github.ref }} = 'refs/heads/main' ]; then
            echo "env=prod" >> $GITHUB_OUTPUT
          else
            echo "env=staging" >> $GITHUB_OUTPUT
          fi

      - name: Deploy to server via SSH
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_IP }}
          username: deploy
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd ~/sunbadev
            git pull
            kubectl apply -k kubernetes/overlays/${{ steps.env.outputs.env }}
            kubectl rollout restart deployment/api -n ${{ steps.env.outputs.env }}
            kubectl rollout restart deployment/nginx -n ${{ steps.env.outputs.env }}
            kubectl rollout status deployment/api -n ${{ steps.env.outputs.env }}
            kubectl rollout status deployment/nginx -n ${{ steps.env.outputs.env }}
