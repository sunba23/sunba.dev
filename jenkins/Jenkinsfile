pipeline {
    agent any
    stages {
	stage('Checkout git') {
            steps {
                withCredentials([string(credentialsId: 'github-token', variable: 'GITHUB_TOKEN')]) {
		    sh 'rm -rf ./learnlinux'
                    sh 'git clone https://sunba23:$GITHUB_TOKEN@github.com/sunba23/learnlinux.git'
                }
            }
        }
        stage('Build') {
            steps {
                echo 'build simulation...'
            }
        }
        stage('Notify GitHub') {
            steps {
                script {
                    def status = currentBuild.currentResult == 'SUCCESS' ? 'success' : 'failure'
                    def commitSha = sh(script: "git rev-parse HEAD", returnStdout: true).trim()

                    withCredentials([string(credentialsId: 'github-token', variable: 'GITHUB_TOKEN')]) {
			def curlCommand = """
			    curl -L \
			        -X POST \
			        -H "Accept: application/vnd.github+json" \
			        -H "Authorization: Bearer \${GITHUB_TOKEN}" \
			        -H "X-GitHub-Api-Version: 2022-11-28" \
			        https://api.github.com/repos/sunba23/learnlinux/statuses/${commitSha} \
			        -d '{"state":"${status}","context":"continuous-integration/jenkins"}'
			"""
                        def response = sh(
                            script: curlCommand,
                            returnStdout: true
                        )
                        echo "Response from GitHub: ${response}"
                    }
                }
            }
        }
    }
    post {
        always {
            echo "Cleaning up the workspace..."
            deleteDir()
        }
        success {
            echo 'Job completed successfully!'
        }
        failure {
            echo 'Job failed!'
        }
    }
}

